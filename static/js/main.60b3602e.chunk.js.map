{"version":3,"sources":["components/molecules/Collapsible/Collapsible.styles.ts","components/molecules/Collapsible/Collapsible.component.tsx","components/atoms/Input.styles.ts","components/atoms/Input.component.tsx","components/molecules/PropertiesInputs/PropertiesInput.styles.ts","components/molecules/PropertiesInputs/PropertiesInputs.component.tsx","components/organisms/PropertiesPanel/PropertiesPanel.component.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledTitleContainer","styled","button","StyledCaretDown","CaretDown","StyledInfoIcon","Info","CollapsibleBody","div","isOpen","props","Collapsible","label","children","onToggle","onClick","size","StyledInput","input","focused","hasUpdatedValue","StyledInputContainer","value","length","Input","placeholder","onChange","onBlur","name","useState","setFocused","onFocus","Column","Row","PropertiesInputContainer","ChildContainer","hasChildren","CenterColumnInputContainer","PropertiesInput","property","propertyValues","PropertiesPanel","App","setIsOpen","setPropertyValues","prevState","event","target","fieldName","fieldValue","RegExp","test","replace","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60b3602e.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { CaretDown } from \"@styled-icons/fa-solid/CaretDown\";\nimport { Info } from \"@styled-icons/evaicons-solid/Info\";\nimport { CollapsibleProps } from \"./Collapsible.types\";\n\nexport const StyledTitleContainer = styled.button`\n  background-color: #3d4b6c;\n  padding: 8px;\n  font-size: 16px;\n  color: white;\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n    monospace;\n  width: 100%;\n  text-align: left;\n  font-weight: bold;\n  outline: none;\n  border: none;\n`;\n\nexport const StyledCaretDown = styled(CaretDown)`\n  margin-right: 8px;\n`;\n\nexport const StyledInfoIcon = styled(Info)`\n  margin-left: 8px;\n  color: #a5b0c6;\n`;\n\nexport const CollapsibleBody = styled.div<Partial<CollapsibleProps>>`\n  padding-left: 12px;\n  padding-right: 12px;\n  padding-top: ${({ isOpen }) => (isOpen ? 12 : 0)}px;\n  padding-bottom: ${({ isOpen }) => (isOpen ? 16 : 0)}px;\n  background-color: #28334d;\n  height: ${({ isOpen }) => (isOpen ? \"auto\" : \"0px\")};\n  visibility: ${(props) => (props.isOpen ? \"visible\" : \"hidden\")};\n`;\n","import React from \"react\";\nimport {\n  CollapsibleBody,\n  StyledCaretDown,\n  StyledInfoIcon,\n  StyledTitleContainer,\n} from \"./Collapsible.styles\";\nimport { CollapsibleProps } from \"./Collapsible.types\";\n\nexport const Collapsible: React.FC<CollapsibleProps> = ({\n  label,\n  children,\n  onToggle,\n  isOpen,\n}) => {\n  return (\n    <div>\n      <StyledTitleContainer onClick={onToggle}>\n        <StyledCaretDown size={24} />\n        <label>{label}</label>\n        <StyledInfoIcon size={24} />\n      </StyledTitleContainer>\n\n      <CollapsibleBody isOpen={isOpen}>{children}</CollapsibleBody>\n    </div>\n  );\n};\n","import styled from \"styled-components\";\nimport { InputPropTypes } from \"./Input.types\";\n\n//may add an overall theme to handle sizing and colors\n\nexport const StyledInput = styled.input<InputPropTypes>`\n  padding-bottom: 8px;\n  padding-top: 8px;\n  background-color: transparent;\n  outline: none;\n  color: inherit;\n  text-decoration-line: underline;\n\n  text-decoration-color: ${({ focused, hasUpdatedValue }) =>\n    !focused && hasUpdatedValue ? \"#fdd600\" : \"transparent\"};\n  text-decoration-style: dotted;\n  font-weight: bold;\n  text-align: center;\n  border: none;\n  flex-shrink: 1;\n  font-size: inherit;\n  width: 4em;\n  ::placeholder {\n    color: #a5b0c6;\n  }\n`;\n\nexport const StyledInputContainer = styled.div<InputPropTypes>`\n  background-color: ${({ focused }) => (focused ? \"#28334d\" : \"transparent\")};\n  outline-color: #1d8cbe;\n  outline-width: 2px;\n  outline-width: ${({ focused }) => (focused ? 2 : 0)}px;\n  outline-style: solid;\n  display: flex;\n  flex-direction: row;\n  width: max-content;\n  justify-content: center;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ focused, hasUpdatedValue, value }) =>\n    (focused || hasUpdatedValue) && value?.length ? \"white\" : \"#a5b0c6\"};\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n    monospace;\n`;\n\nexport const DimensionsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-items: center;\n  margin-left: 4px;\n  margin-right: 8px;\n  color: inherit;\n`;\n","import { useState } from \"react\";\nimport { StyledInput, StyledInputContainer } from \"./Input.styles\";\nimport { InputPropTypes } from \"./Input.types\";\n\nexport const Input: React.FC<InputPropTypes> = ({\n  placeholder = \"auto\",\n  value = \"\",\n  onChange,\n  onBlur,\n  name,\n}): JSX.Element => {\n  const [focused, setFocused] = useState(false);\n  const onFocus = () => setFocused(true);\n\n  const onInputBlur = () => {\n    onBlur && onBlur(name!, value);\n    setFocused(false);\n  };\n\n  return (\n    <StyledInputContainer\n      focused={focused}\n      hasUpdatedValue={!!value.length}\n      value={value}\n    >\n      <StyledInput\n        value={value}\n        onChange={onChange}\n        name={name}\n        onFocus={onFocus}\n        onBlur={onInputBlur}\n        focused={focused}\n        placeholder={placeholder}\n        hasUpdatedValue={!!value.length}\n      />\n    </StyledInputContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 1;\n  align-items: center;\n  padding-left: 8px;\n  padding-right: 8px;\n  justify-content: center;\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 1;\n`;\n\nexport const PropertiesInputContainer = styled.div`\n  background-color: #3d4b6c;\n  display: flex;\n`;\n\nexport const ChildContainer = styled.div<{ hasChildren: boolean }>`\n  border-width: 4px;\n  border-color: ${({ hasChildren }) =>\n    hasChildren ? \"#28334d\" : \"transparent\"};\n  border-style: solid;\n`;\n\nexport const CenterColumnInputContainer = styled.div`\n  margin-top: 12px;\n  margin-bottom: 12px;\n`;\n","import React from \"react\";\nimport { Input } from \"../../atoms/Input.component\";\nimport {\n  CenterColumnInputContainer,\n  ChildContainer,\n  Column,\n  PropertiesInputContainer,\n  Row,\n} from \"./PropertiesInput.styles\";\nimport { PropertiesInputProps } from \"./PropertiesInput.types\";\n\nexport const PropertiesInput: React.FC<PropertiesInputProps> = ({\n  children,\n  onChange,\n  onBlur,\n  property,\n  propertyValues,\n}) => {\n  return (\n    <PropertiesInputContainer>\n      <Row data-testid=\"properties-input-row\">\n        <Column>\n          <Input\n            onChange={onChange}\n            onBlur={onBlur}\n            name={`${property}-left`}\n            value={propertyValues[`${property}-left`]}\n          />\n        </Column>\n        <Column>\n          <CenterColumnInputContainer>\n            <Input\n              onChange={onChange}\n              onBlur={onBlur}\n              name={`${property}-top`}\n              value={propertyValues[`${property}-top`]}\n            />\n          </CenterColumnInputContainer>\n          <ChildContainer hasChildren={children != null}>\n            {children}\n          </ChildContainer>\n          <CenterColumnInputContainer>\n            <Input\n              onChange={onChange}\n              onBlur={onBlur}\n              name={`${property}-bottom`}\n              value={propertyValues[`${property}-bottom`]}\n            />\n          </CenterColumnInputContainer>\n        </Column>\n        <Column>\n          <Input\n            onChange={onChange}\n            onBlur={onBlur}\n            name={`${property}-right`}\n            value={propertyValues[`${property}-right`]}\n          />\n        </Column>\n      </Row>\n    </PropertiesInputContainer>\n  );\n};\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { PropertiesInput } from \"../../molecules/PropertiesInputs/PropertiesInputs.component\";\nimport { PropertiesPanelProps } from \"./PropertiesPanel.types\";\n\nexport const PropertiesPanel: React.FC<PropertiesPanelProps> = ({\n  onChange,\n  onBlur,\n  propertyValues,\n}) => {\n  return (\n    <>\n      <PropertiesInput\n        onChange={onChange}\n        onBlur={onBlur}\n        property=\"margin\"\n        propertyValues={propertyValues}\n      >\n        <PropertiesInput\n          onChange={onChange}\n          onBlur={onBlur}\n          property=\"padding\"\n          propertyValues={propertyValues}\n        />\n      </PropertiesInput>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Collapsible } from \"./components/molecules/Collapsible/Collapsible.component\";\n\nimport { PropertiesPanel } from \"./components/organisms/PropertiesPanel/PropertiesPanel.component\";\n\nfunction App() {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = () => {\n    setIsOpen((prevState) => !prevState);\n  };\n\n  const [propertyValues, setPropertyValues] = useState<Record<string, string>>(\n    {},\n  );\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    setPropertyValues({ ...propertyValues, [name]: value });\n  };\n\n  const onBlur = (fieldName: string, fieldValue: string) => {\n    if (fieldValue?.length) {\n      const expression = new RegExp(/^\\d+(pt|px)$/);\n      const isValid = expression.test(fieldValue.replace(\" \", \"\"));\n      if (isValid) {\n        setPropertyValues({\n          ...propertyValues,\n          [fieldName]: fieldValue.replace(\" \", \"\"),\n        });\n      } else {\n        setPropertyValues({\n          ...propertyValues,\n          [fieldName]: \"\",\n        });\n\n        alert(\"Value must start with a string and end with either pt,px,%,em\");\n      }\n    }\n  };\n\n  //may need to implement provider to handle state;\n\n  return (\n    <div>\n      <Collapsible\n        onToggle={onToggle}\n        isOpen={isOpen}\n        label=\"Margins & Padding\"\n      >\n        <PropertiesPanel\n          onChange={onChange}\n          onBlur={onBlur}\n          propertyValues={propertyValues}\n        />\n      </Collapsible>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}